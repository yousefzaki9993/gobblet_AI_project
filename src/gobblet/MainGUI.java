/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gobblet;

import gobblet.GameGUI.playerType;
import javax.swing.Timer;
/**
 *
 * @author Ghaith
 */
public class MainGUI extends javax.swing.JFrame implements Observer{

    private static boolean run = false;
    private static boolean started = false;
    private static playerType pt1 = playerType.USER;
    private static playerType pt2 = playerType.USER;
    Timer t;
    private long startTime;
    private long pauseTime;
    
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        WHITE = new javax.swing.ButtonGroup();
        BLACK = new javax.swing.ButtonGroup();
        gamePanel = new GameGUI();
        R_white_player = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        R_white_easy = new javax.swing.JRadioButton();
        R_white_medium = new javax.swing.JRadioButton();
        R_white_hard = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        R_black_player = new javax.swing.JRadioButton();
        R_black_easy = new javax.swing.JRadioButton();
        R_black_medium = new javax.swing.JRadioButton();
        R_black_hard = new javax.swing.JRadioButton();
        restartButton = new javax.swing.JButton();
        pauseButton = new javax.swing.JButton();
        stopButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        status_box = new javax.swing.JTextField();
        timer_box = new javax.swing.JTextField();
        feedback = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        gamePanel.setMaximumSize(new java.awt.Dimension(600, 600));
        gamePanel.setMinimumSize(new java.awt.Dimension(600, 600));
        gamePanel.setName("gamePanel"); // NOI18N
        gamePanel.setPreferredSize(new java.awt.Dimension(600, 600));
        gamePanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gamePanelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
        );

        WHITE.add(R_white_player);
        R_white_player.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_white_player.setSelected(true);
        R_white_player.setText("Player");
        R_white_player.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_white_playerActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel1.setText("WHITE:");

        WHITE.add(R_white_easy);
        R_white_easy.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_white_easy.setText("CPU Easy");
        R_white_easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_white_easyActionPerformed(evt);
            }
        });

        WHITE.add(R_white_medium);
        R_white_medium.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_white_medium.setText("CPU Medium");
        R_white_medium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_white_mediumActionPerformed(evt);
            }
        });

        WHITE.add(R_white_hard);
        R_white_hard.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_white_hard.setText("CPU Hard");
        R_white_hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_white_hardActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel2.setText("BLACK:");

        BLACK.add(R_black_player);
        R_black_player.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_black_player.setSelected(true);
        R_black_player.setText("Player");
        R_black_player.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_black_playerActionPerformed(evt);
            }
        });

        BLACK.add(R_black_easy);
        R_black_easy.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_black_easy.setText("CPU Easy");
        R_black_easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_black_easyActionPerformed(evt);
            }
        });

        BLACK.add(R_black_medium);
        R_black_medium.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_black_medium.setText("CPU Medium");
        R_black_medium.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_black_mediumActionPerformed(evt);
            }
        });

        BLACK.add(R_black_hard);
        R_black_hard.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        R_black_hard.setText("CPU Hard");
        R_black_hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                R_black_hardActionPerformed(evt);
            }
        });

        restartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-restart-40.png"))); // NOI18N
        restartButton.setEnabled(false);
        restartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                restartButtonActionPerformed(evt);
            }
        });

        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-play-80.png"))); // NOI18N
        pauseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseButtonActionPerformed(evt);
            }
        });

        stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-stop-40.png"))); // NOI18N
        stopButton.setEnabled(false);
        stopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopButtonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel3.setText("TIMER:");

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        jLabel4.setText("STATUS:");

        status_box.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        status_box.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        status_box.setText("STOPPED");
        status_box.setFocusable(false);

        timer_box.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        timer_box.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timer_box.setText("00:00");
        timer_box.setFocusable(false);

        feedback.setText("Press the play button to start the game");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(feedback, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(R_white_hard, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R_white_player, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R_white_easy, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R_white_medium, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(stopButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(restartButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(R_black_hard, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R_black_player, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R_black_easy, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(R_black_medium, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(status_box, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(timer_box, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gamePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(restartButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(stopButton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_white_player)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_white_easy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_white_medium)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_white_hard)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_black_player)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_black_easy)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_black_medium)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(R_black_hard)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(status_box, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(timer_box, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(feedback)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void restartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restartButtonActionPerformed
        GameGUI.stop();
        GameGUI.start(pt1, pt2);
        gamePanel.repaint();
        feedback.setText("Game Restarted!");
        status_box.setText("WHITE TURN");
        GameGUI.addNeutralObserver(this);
        startTime = System.currentTimeMillis();
    }//GEN-LAST:event_restartButtonActionPerformed
    private void disableRadioButtons(){
        R_black_player.setEnabled(false);
        R_black_easy.setEnabled(false);
        R_black_medium.setEnabled(false);
        R_black_hard.setEnabled(false);
        R_white_player.setEnabled(false);
        R_white_easy.setEnabled(false);
        R_white_medium.setEnabled(false);
        R_white_hard.setEnabled(false);
    }
    private void enableRadioButtons(){
        R_black_player.setEnabled(true);
        R_black_easy.setEnabled(true);
        R_black_medium.setEnabled(true);
        R_black_hard.setEnabled(true);
        R_white_player.setEnabled(true);
        R_white_easy.setEnabled(true);
        R_white_medium.setEnabled(true);
        R_white_hard.setEnabled(true);
    }
    private void pauseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseButtonActionPerformed
        if(!started){
            
            GameGUI.start(pt1,pt2);
            gamePanel.repaint();
            stopButton.setEnabled(true);
            restartButton.setEnabled(true);
            pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-pause-80.png")));
            run = true;
            started = true;
            disableRadioButtons();
            feedback.setText("game started!");
            status_box.setText("WHITE TURN");
            startTime = System.currentTimeMillis();
            t = new Timer(1000, (e) -> {
                long now = System.currentTimeMillis();
                long elapsedMillis = now - startTime;
                long elapsedSeconds = elapsedMillis / 1000;
                long elapsedMinutes = elapsedSeconds / 60;
                elapsedSeconds = elapsedSeconds % 60;
                timer_box.setText(String.format("%02d:%02d", elapsedMinutes, elapsedSeconds));
            });
            t.start();
            GameGUI.addNeutralObserver(this);
        }
        else if (!run) {
            GameGUI.resume();
            pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-pause-80.png")));
            run = true;
            feedback.setText("game resumed!");
            startTime += System.currentTimeMillis() - pauseTime;
            t.start();
        }else{
            GameGUI.pause();
            pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-play-80.png")));
            run = false;
            feedback.setText("game paused!");
            pauseTime = System.currentTimeMillis();
            t.stop();
        }
        
    }//GEN-LAST:event_pauseButtonActionPerformed

    private void stopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopButtonActionPerformed
        run=false;
        started = false;
        GameGUI.stop();
        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-play-80.png")));
        stopButton.setEnabled(false);
        restartButton.setEnabled(false);
        enableRadioButtons();
        gamePanel.repaint();
        feedback.setText("Game Stopped!");
        t.stop();
    }//GEN-LAST:event_stopButtonActionPerformed

    private void R_white_playerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_white_playerActionPerformed
        pt1 = playerType.USER;
    }//GEN-LAST:event_R_white_playerActionPerformed

    private void R_white_easyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_white_easyActionPerformed
        pt1 = playerType.CPU_EASY;
    }//GEN-LAST:event_R_white_easyActionPerformed

    private void R_white_mediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_white_mediumActionPerformed
        pt1 = playerType.CPU_MID;
    }//GEN-LAST:event_R_white_mediumActionPerformed

    private void R_white_hardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_white_hardActionPerformed
        pt1 = playerType.CPU_HARD;
    }//GEN-LAST:event_R_white_hardActionPerformed

    private void R_black_playerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_black_playerActionPerformed
        pt2 = playerType.USER;
    }//GEN-LAST:event_R_black_playerActionPerformed

    private void R_black_easyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_black_easyActionPerformed
        pt2 = playerType.CPU_EASY;
    }//GEN-LAST:event_R_black_easyActionPerformed

    private void R_black_mediumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_black_mediumActionPerformed
        pt2 = playerType.CPU_MID;
    }//GEN-LAST:event_R_black_mediumActionPerformed

    private void R_black_hardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_R_black_hardActionPerformed
        pt2 = playerType.CPU_HARD;
    }//GEN-LAST:event_R_black_hardActionPerformed

    private void gamePanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gamePanelMouseClicked
        if(run){
            status_box.setText(GameGUI.isBlackTurn()?"BLACK TURN":"WHITE TURN");
            feedback.setText(GameGUI.getFeedback());
        }
        
    }//GEN-LAST:event_gamePanelMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MainGUI gui = new MainGUI();
                gui.setLocationRelativeTo(null);
                gui.setResizable(false);
                gui.setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup BLACK;
    private javax.swing.JRadioButton R_black_easy;
    private javax.swing.JRadioButton R_black_hard;
    private javax.swing.JRadioButton R_black_medium;
    private javax.swing.JRadioButton R_black_player;
    private javax.swing.JRadioButton R_white_easy;
    private javax.swing.JRadioButton R_white_hard;
    private javax.swing.JRadioButton R_white_medium;
    private javax.swing.JRadioButton R_white_player;
    private javax.swing.ButtonGroup WHITE;
    private javax.swing.JLabel feedback;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton pauseButton;
    private javax.swing.JButton restartButton;
    private javax.swing.JTextField status_box;
    private javax.swing.JButton stopButton;
    private javax.swing.JTextField timer_box;
    // End of variables declaration//GEN-END:variables

   
    @Override
    public boolean isBlack() {
        throw new UnsupportedOperationException("Main GUI is not a player"); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void startRole() {
        throw new UnsupportedOperationException("Main GUI is not a player"); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void endGame() {
        t.stop();
        run =false;
        started = false;
        feedback.setText(GameGUI.getFeedback());
        status_box.setText(GameGUI.isBlackTurn()?"BLACK WINS":"WHITE WINS");
        restartButton.setEnabled(false);
        stopButton.setEnabled(false);
        pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gobblet/icons8-play-80.png")));
        enableRadioButtons();
    }

    @Override
    public boolean isNeutral() {
        return true;
    }
}
